public class Pokemon{

  private String entry;
  private String pkm;
  public int bst;
  public int dexNum;
  public int[] stats;
  public boolean canMegaEvolve = false;
  
  Types type;
  Moves moveset;
  
  public String[] pokedex = {".", "Budloom. The Blooming Flower Pokemon", "Leafalin. The Growing Leaf Pokemon", "Lumitree. The Sun Tree Pokemon", "Komoflare. The Fiery Reptile Pokemon", "Infernodo. The Burning Lizard Pokemon", "Pyrenin. The Poisonous Flame Pokemon", "Surfaling. The Surf Pokemon", "Seawynd. The Flying Fish Pokemon", "Aerocean. The Soaring Waters Pokemon", "Simiaru. The Small Monkey Pokemon", "Lemunazta. The Aztec Lemur Pokemon", "Cumulair. The Fluffy Cloud Pokemon", "Stratiglide. The Stratus Cloud Pokemon", "Cirrice. The Ice Crystal Pokemon", "Nimboom. The Electrostatic Pokemon", "Firean. The Fireball Pokemon", "Lavablast. The Flowing Lava Pokemon", "Vulcanior. The Stratovolcanic Pokemon", "Smokarian. The Shifting Smoke Pokemon", "Redubug. The Stalking Bug Pokemon", "Jabeetle. The Sharp Beetle Pokemon", "Assasant. The Assasin Ant Pokemon", "Deskai. The Shade Pokemon", "Destoble. The Shadow Dweller Pokemon", "Kusode. The Sapling Pokemon", "Timberra. The Tree Root Pokemon", "Barnapool. The Barnacle Pokemon", "Nephraqua. The Colorful Lobster Pokemon", "Blazap. The Burning Spark Pokemon", "Flarectric. The Electrocution Pokemon", "Arrosion. The Poison Arrow Pokemon", "Arorock. The Obsidian Arrowhead Pokemon", "Refractan. The Refraction Pokemon", "Prisma. The Prism Pokemon", "Dustairy. The Magic Powder Pokemon", "Majesthorn. The Healing Unicorn Pokemon", "Polliair. The Pollen Transfer Pokemon", "Lilacaura. The Lilac Pokemon", "Gekakai. The Terra Firma Pokemon", "Quakeo. The Techtonic Pokemon", "Spearswim. The Swordfish Pokemon", "Marlinity. The Marlin Pokemon", "Forrime. The Tree Rime Pokemon", "Arctane. The Ice Pillar Pokemon", "Vidilaze. The Glaze Ice Pokemon", "Abykal. The Frozen Lake Pokemon", "Tijauego. The Firewalker Pokemon", "Perizen. The Firescales Pokemon", "Prilibre. The Libre Pokemon", "Mataflect. The Matador Pokemon", "Paravia. The Parakeet Pokemon", "Conuair. The Conure Pokemon", "Tropicaw. The Macaw Pokemon", "Neonadai. The Snake Hatchling Pokemon", "Anadrai. The Juvenille Serpent Pokemon", "Anacondroi. The Anaconda Pokemon", "Depredosa. The Predator Pokemon", "Cazaturnal. The Night Tracker Pokemon", "Foosaken. The Foosa Pokemon", "Wispis. The Small Wisp Pokemon", "Wispolon. The Eidolon Pokemon", "Wraithiant. The Glowing Wraith Pokemon", "Otonium. The Soft Landing Pokemon", "Janvity. The High Jump Pokemon", "Gravitrus. The Gravity Pokemon", "Stonefall. The Loose Rock Pokemon", "Geotavis. The Flying Geode Pokemon", "Quartzel. The Quartz Quetzal Pokemon", "Bronzing. The Bronze Alloy Pokemon", "Silvrain. The Silver Metal Pokemon", "Goldore. The Gold Nugget Pokemon", "Platinel. The Platinum Ingot Pokemon", "Ovencan Feebass. The Fish Pokemon", "Ovencan Milotic. The Tender Pokemon", "Eeliquent. The Psychic Eel Pokemon", "Ovencan Hoppip. The Cottonweed Pokemon", "Ovencan Skiploom. The Cottonweed Pokemon", "Ovencan Jumpluff. The Cotton Pokemon", "Ovencan Zangoose. The Ferret Pokemon", "Wezadreja. The Strong Weasel Pokemon", "Ovencan Seviper. The Fang Snake Pokemon", "Cobriente. The Toxic Cobra Pokemon", "Ovencan Castform. The Weather Pokemon", "Ovencan Phanpy. The Long Nose Pokemon", "Ovencan Donphan. The Armored Pokemon", "Neumaphant. The Steel Elephant Pokemon", "Ovencan Sneasel. The Sharp Claw Pokemon", "Ovencan Weaville. The Sharp Claw Pokemon", "Crystalyne. The Crystal Pokemon", "Pythamo. The Camouflage Snake Pokemon", "Geysearin. The Hot Water Pokemon", "Nuclecid. The Nuclear Waste Pokemon", "Scarobian. The Scarab Beetle Pokemon", "Bismuthal. The Rainbow Rock Pokemon", "Eclipsus. The Moon Shadow Pokemon", "Mythicon. The Mythic Creature Pokemon", "Scaleon. The Tough Scales Pokemon", "Lustreon. The Bright Lights Pokemon", "Swirlseed. The Seed Sprout Pokemon", "Willowind. The Windblown Tree Pokemon", "Petramoss. The Petrified Moss Pokemon", "Cypriu. The Cypress Tree Pokemon", "Mysteerie. The Mysterious Pokemon", "Coraria. The Reef Pokemon", "Torokari. The Shining Jungle Pokemon", "Dunsetchi. The Sandworm Pokemon", "Raydol. The Changing Light Pokemon", "Shimmrain. The Shimmering Water Pokemon", "Clorophis. The Chlorophyll Pokemon", "Infraray. The Long Wavelength Pokemon", "Glarox. The Albedo Pokemon", "Illumilight. The Filament Pokemon", "Shadeluge. The Blackout Pokemon", "Wavera. The Wave Pokemon", "Aquarrent. The Current Pokemon", "Tidation. The Tidal Wave Pokemon", "Singulariton. The Black Hole Pokemon", "Mariglow. The Aqua Gem Pokemon ", "Emeraleaf. The Forest Gem Pokemon", "Rubignite. The Flame Gem Pokemon", "Megalachomp. The Aincent Shark Pokemon", "Sarcavian. The Aincent Crocodile Pokemon", "Titanithon. The Aincent Snake Pokemon", "Cycazoic. The Cycad Pokemon", "Jaguyote. The Chupacabra Pokemon"};
  public String[] pkmTypes = {"???", "Grass", "Grass", "Grass/Light", "Fire", "Fire/Poison", "Fire/Poison", "Water", "Water/Flying", "Water/Flying", "Normal", "Normal/Grass", "Flying/Normal", "Flying", "Flying/Ice", "Flying/Electric", "Fire", "Fire", "Fire/Ground", "Fire/Flying", "Bug", "Bug", "Bug/Dark", "Dark", "Dark/Normal", "Grass", "Grass/Ground", "Water", "Water/Bug", "Electric/Fire", "Electric/Fire", "Steel/Poison", "Rock", "Light", "Light/Water", "Fairy", "Fairy/Light", "Fairy", "Grass/Fairy", "Ground", "Ground/Psychic", "Water/Steel", "Water", "Ice/Grass", "Ice/Steel","Ice", "Water/Ice", "Fire", "Dragon/Fire", "Fighting", "Fighting", "Flying", "Grass/Flying", "Grass/Flying", "Fighting", "Fighting", "Fighting/Water", "Normal", "Normal", "Normal", "Ghost", "Ghost", "Ghost/Light", "Psychic/Flying", "Psychic", "Psychic", "Rock", "Rock/Flying", "Rock/Light", "Steel", "Steel", "Steel/Light", "Steel/Dark", "Water", "Water/Electric", "Psychic/Electric", "Grass", "Fire/Grass", "Fire/Grass", "Normal/Fighting", "Fighting", "Water/Poison", "Poison", "Normal", "Grass", "Grass/Steel", "Steel", "Light/Ice", "Light/Ice", "Light", "Grass/Dark", "Fire/Water", "Poison/Steel", "Ghost/Bug", "Rock/Fairy", "Light/Dark", "Ghost/Dragon", "Dragon", "Light", "Grass", "Grass/Flying", "Grass/Rock", "Grass/Water", "Dark/Ghost", "Water/Rock", "Grass/Light", "Normal/Ground", "Light", "Water/Light", "Grass/Light", "Fire/Light", "Ice/Light", "Electric/Light", "Dark/Electric", "Water", "Dragon/Water", "Dragon/Water", "Dark/Light", "Light/Water", "Light/Grass", "Light/Fire", "Water/Fighting", "Dark/Rock", "Water/Dark", "Grass", "Dark/Fighting"};
  public int[][] pkmStats = {{0, 0, 0, 0, 0, 0}, {60, 50, 55, 50, 55, 50} /*Budloom 320*/,{80, 70, 65, 70, 65, 50} /*Leafalin 395*/,{100, 85, 90, 100, 90, 60} /*Lumitree 525*/, {45, 45, 45, 60, 60, 65}/*Komoflare 320*/, {55, 60, 60, 75, 70, 75} /*Infernodo 395*/, {85, 75, 100, 90, 100, 75}/*Pyrenin 525*/,{55, 60, 40, 50, 40, 75}/*Surfaling 320*/,{65, 75, 50, 65, 50, 90}/*Seawynd 395*/,{75, 105, 70, 85, 70, 120}/*Aerocean 525*/,{40, 50, 40, 30, 40, 50}/*Simiaru 250*/,{75, 75, 55, 55, 55, 85}/*Lemunazta 400*/,{57, 50, 55, 50, 55, 57}/*Cumulair 274*/,{66, 58, 63, 58, 63, 66}/*Stratiglide 374*/,{89, 102, 67, 79, 67, 111}/*Cirrice 515*/,{101, 76, 75, 99, 75, 89}/*Nimboom 515*/,{44, 40, 40, 55, 40, 55}/*Firean 274*/,{61, 52, 65, 70, 66, 61}/*Lavablast 375*/,{92, 71, 100, 82, 100, 65}/*Vulcanior 510*/,{85, 76, 68, 88, 68, 125}/*Smokarian 510*/,{35, 45, 30, 25, 20, 45}/*Redubug 200*/,{50, 55, 50, 30, 25, 40}/*Jabeetle 250*/,{60, 100, 60, 55, 50, 75}/*Assasant 400*/, {40, 40, 40, 60, 60, 60}/*Deskai 300*/,{60, 60, 60, 80, 80, 85}/*Destoble 425*/,{40, 35, 50, 30, 55, 40}/*Kusode 250*/,{85, 70, 100, 100, 80, 35}/*Timberra 470*/,{75, 50, 100, 25, 25, 25}/*Barnapool 300*/,{71, 88, 89, 55, 55, 92}/*Nephraqua 450*/,{50, 30, 30, 75, 50, 75}/*Blazap 310*/,{63, 59, 59, 125, 69, 125}/*Flarectric 505*/,{55, 85, 45, 70, 45, 75}/*Arrosion 375*/,{103, 113, 107, 77, 87, 48}/*Arorock 535*/,{60, 37, 37, 60, 57, 70}/*Refractan 321*/,{77, 66, 88, 99, 111, 79}/*Prisma 520*/,{28, 31, 29, 58, 53, 45}/*Dustairy 244*/,{95, 67, 80, 88, 88, 70}/*Majesthorn 488*/,{42, 46, 34, 46, 34, 60}/*Polliar 262*/,{79, 87, 67, 83, 73, 75}/*Lilacaura 464*/,{50, 75, 40, 40, 40, 55}/*Gekakai 300*/,{80, 100, 75, 65, 75, 80}/*Quakeo 475*/,{55, 100, 45, 25, 25, 75}/*Spearswim 325*/,{75, 150, 70, 50, 50, 100}/*Marlinity 495*/,{60, 65, 70, 50, 45, 40}/*Forrime 330*/,{100, 110, 120, 80, 70, 60}/*Arctane 540*/,{55, 45, 55, 75, 65, 35}/*Vidilaze 330*/,{120, 70, 85, 105, 85, 75}/*Abykal 540*/,{52, 77, 73, 71, 64, 62}/*Tijauego 399*/,{80, 122, 92, 90, 92, 99}/*Perizen 575*/, {80, 100, 70, 50, 60, 50}/*Primalibre 410*/,{85, 100, 85, 65, 85, 100}/*Mataflect 520*/,{45, 64, 33, 33, 33, 64}/*Paravia 275*/,{70, 81, 55, 49, 55, 75}/*Conuair 385*/,{90, 99, 74, 64, 74, 99}/*Tropicaw 500*/,{35, 55, 50, 25, 25, 40}/*Neonadai 230*/,{55, 80, 75, 50, 50, 40}/*Boadri 350*/,{100, 110, 110, 70, 70, 40}/*Anacondroi 500*/,{55, 60, 45, 30, 30, 50}/*Depredosa 270*/,{66, 70, 54, 45, 45, 80}/*Cazaturna 360*/,{77, 94, 70, 50, 60, 99}/*Foosaken 450*/,{50, 35, 35, 75, 75, 40}/*Wispis 310*/,{70, 50, 65, 100, 90, 65}/*Wispolon 440*/,{100, 60, 95, 120, 95, 50}/*Wraithiant 520*/,{50, 25, 25, 100, 100, 25}/*Otonium 325*/,{75, 45, 45, 111, 111, 63}/*Janvity 450*/,{100, 55, 55, 122, 122, 81}/*Gravitrus 535*/,{70, 45, 35, 25, 15, 80}/*Stonefall 270*/,{70, 65, 60, 55, 50, 100}/*Geotavis 400*/,{70, 90, 90, 75, 75, 110}/*Quartzel 510*/,{45, 55, 65, 20, 25, 50}/*Bronzing 260*/,{70, 80, 90, 35, 45, 50}/*Silvrain 370*/,{100, 100, 100, 60, 70, 50}/*Goldore 480*/,{110, 115, 150, 60, 105, 50}/*Platinel 590*/,{20, 15, 25, 10, 55, 80}/*Feebas 200*/,{95, 60, 69, 100, 115, 101}/*Milotic 540*/,{100, 60, 70, 110, 124, 111}/*Eeliquent 575*/,{35, 35, 40, 35, 50, 55}/*Hoppip 250*/,{55, 45, 50, 45, 65, 80}/*Skiploom 340*/,{65, 50, 65, 60, 100, 120}/*Jumpluff 460*/,{73, 115, 60, 60, 60, 90}/*Zangoose 458*/,{92, 125, 70, 65, 70, 100}/*Wezadreja 522*/,{73, 100, 60, 100, 60, 65}/*Seviper 458*/,{92, 105, 70, 105, 70, 80}/*Cobriente 522*/,{80, 80, 80, 80, 80, 80}/*Castform 480*/,{90, 60, 60, 40, 40, 40}/*Phanpy 330*/,{90, 120, 120, 60, 60, 50}/*Donphan 500*/,{100, 120, 130, 65, 75, 65}/*Neumaphant 555*/,{55, 95, 55, 35, 75, 115}/*Sneasel 430*/,{70, 120, 60, 45, 85, 130}/*Weavile 510*/,{70, 60, 70, 100, 110, 40}/*Crystalyne 450*/,{75, 110, 120, 45, 105, 35}/*Pythamo 490*/,{50, 150, 150, 50, 50, 50}/*Geysearin 500*/,{80, 100, 60, 100, 70, 70}/*Nuclecid 480*/,{70, 85, 100, 70, 95, 50}/*Scarobian 470*/,{88, 55, 95, 105, 115, 32}/*Bismuthal 490*/,{65, 75, 60, 110, 110, 85}/*Eclipsus 505*/,{75, 95, 100, 85, 90, 75}/*Mythicon 520*/,{85, 115, 115, 65, 75, 70}/*Scaleon 525*/,{75, 60, 60, 105, 105, 120}/*Lustreon 525*/,{40, 25, 40, 25, 40, 25}/*Seedolin 195*/,{95, 70, 75, 95, 85, 113}/*Willowind 533*/,{125, 110, 150, 50, 70, 28}/*Petramoss 533*/,{100, 100, 100, 100, 100, 50}/*Cypriu 550*/,{70, 105, 80, 60, 110, 101}/*Mysteerie 526 */,{60, 130, 145, 50, 95, 30}/*Coraria 510*/,{150, 77, 88, 81, 92, 62}/*Torokari 550*/,{110, 99, 85, 85, 80, 61}/*Dunsetchi 520*/,{100, 40, 40, 40, 40, 40}/*Raydol 300*/,{75, 75, 75, 125, 75, 75}/*Shimmrain 500*/,{75, 75, 125, 75, 75, 75}/*Clorophis 500*/,{75, 125, 75, 75, 75, 75}/*Infraray 300*/,{75, 75, 75, 75, 125, 75}/*Glarox 500*/,{75, 75, 75, 75, 75, 125}/*Illumilight 500*/,{50, 75, 50, 200, 50, 150}/*Shadeluge 300*/,{50, 35, 45, 75, 45, 50}/*Wavera 300*/,{70, 60, 65, 110, 65, 80}/*Aquarrent 450*/,{100, 70, 90, 140, 90, 110}/*Tidation 600*/,{115, 105, 105, 125, 125, 25}/*Singulariton 600*/,{95, 50, 95, 150, 95, 95}/*Mariglow 580*/,{95, 150, 95, 50, 95, 95}/*Emeraleaf 580*/,{50, 95, 95, 95, 95, 150}/*Rubignite 580*/,{110, 175, 110, 75, 100, 105}/*Meglachomp 675*/,{90, 175, 125, 75, 125, 85}/*Sarcavian 675*/,{100, 175, 175, 75, 100, 50}/*Titanithon 675*/,{89, 137, 92, 83, 93, 106}/*Jaguoyte 600*/,{144, 67, 113, 121, 113, 42}/*Cycazoic 600*/};
  
  public String[] megaEvolutions = {"Mega Lumitree", "Mega Pyrenin", "Mega Aerocean", "Mega Nimboom", "Mega Cirrice", "Mega Arorock", "Mega Prisma", "Mega Quakeo", "Mega Tropicaw", "Mega Anacondroi", "Mega Foosaken", "Mega Platinel", "Mega Eeliquent", "Mega Nuclecid", "Mega Bismuthal", "Mega Scarobian", "Mega Eclipsus", "Mega Mythicon", "Mega Tidation"}
  public String[] megaTypes = {"Grass/Light", "Fire/Poison", "Water/Flying", "Electric/Dark", "Ice/Light", "Rock/Poison", "Light/Dragon", "Ground", "Flying/Grass", "Fighting/Water", "Normal", "Steel", "Psychic/Electric", "Poison/Steel", "Fairy/Rock", "Bug", "Dark/Light", "Ghost/Dragon", "Dragon/Water".}
  public int[][] megaStats ={{143, 96, 101, 134, 101, 50}/*Mega Lumitree 625 */, {95, 99, 117, 99, 120, 95}/*Mega Pyrenin 625 */, {95, 125, 77, 101, 77, 150}/*Mega Aerocean 625 */, {111, 75, 100, 124, 110, 100}/*Mega Nimboom 615 */, {100, 120, 88, 94, 88, 125}/*Mega Cirrice 615 */, {123, 133, 122, 101, 101, 55}/*Mega Arorock 635 */, {95, 70, 95, 117, 130, 113}/*Mega Prisma 620 */, {111, 111, 88, 85, 88, 92}/*Mega Quakeo 575 */, {110, 117, 93, 77, 93, 110}/*Mega Tropicaw 600 */, {110, 140, 140, 70, 100, 40}/*Mega Anacondroi 600 */, {105, 120, 75, 75, 75, 105}/*Mega Foosaken 550*/, {125, 125, 150, 99, 125, 66}/*Mega Platinel 690*/, {122, 75, 75, 125, 145, 133}/*Mega Eeliquent 675*/, {92, 115, 83, 115, 93, 82}/*Mega Nuclecid 580*/, {99, 75, 123, 123, 135, 35}/*Mega Bismuthal 590*/, {90, 100, 133, 77, 100, 70}/*Mega Scarobian 570*/, {82, 82, 82, 117, 117, 111}/*Mega Mythicon 580*/, {100, 100, 100, 170, 110, 135}/*Mega Tidation 700*/
    
  public Pokemon(){
    dexNum = -1;
    pkm = "";
    entry = "";
  }
    
  public Pokemon(String var){ // Creates pokemon, initializes Stats, Type, and Moveset
    if (var.charAt(0) == '#'){
      dexNum = Integer.parseInt(var.substring(1));
      pkm = pokedex[dexNum].substring(0, pokedex[dexNum].indexOf("."));
      type = new Types(pkmTypes[dexNum]);
      stats = pkmStats[dexNum];
    } else {
      pkm = var;
      for(int i = 0; i < pokedex.length; i++){
        if(pokedex[i].substring(0, pokedex[i].indexOf(".")).equalsIgnoreCase(pkm)){
        dexNum = i;
        }
      }
      stats = pkmStats[dexNum];
    }
    for(int s : stats){
      bst += s;
    }
    type = new Types(dexNum);
    moveset = new Moves(dexNum);
  }

  public Pokemon(int num){ // used for super() method in subclasses
    dexNum = num;
    stats = pkmStats[dexNum];
    for(int s : stats){
      bst += s;
    }
  }
  
  public String dexEntry(){
    String str;
    if (dexNum > 0 && pkm != ""){
      str += "Entry "+dexNum+": "+pkm+"\nType: "+pkmTypes[dexNum];
      for(int i = 0; i < megaEvolutions.length; i++){
        if(pokedex[dexNum].substring(0, pokedex[dexNum].indexOf(".")).equalsIgnoreCase(megaEvolutions[i].substring(5))){
          canMegaEvolve = true;
          str += "/nCan Mega Evolve into Mega"+pkm;
        }
      }
      return str;
    } else {
      return "No Entry Found \n";
    }
  }

  public String stats(){ // Returns a list of this Pokemon's Stats
    String s = "(BST: "+bst+", ";
    int stat = stats[0];
    s += "HP: "+stat+", ";
    stat = pkmStats[dexNum][1];
    s += "ATK: "+stat+", ";
    stat = pkmStats[dexNum][2];
    s += "DEF: "+stat+", ";
    stat = pkmStats[dexNum][3];
    s += "SP ATK: "+stat+", ";
    stat = pkmStats[dexNum][4];
    s += "SP DEF: "+stat+", ";
    stat = pkmStats[dexNum][5];
    s += "SPD: "+stat+")";
    return s;
  }
  
  public String typeSearch(String targetType){ // Used for multiSearch algorithm in main
    String t;
    for(int i = 1; i < pkmTypes.length-1; i++){
       t = pkmTypes[i];
       pkm = pokedex[i];
       if(t.equalsIgnoreCase(targetType)){
          entry += pkm.substring(0, pkm.indexOf(".")) + ", ";
       } else if(t.indexOf("/") != -1){
           if(t.substring(0, t.indexOf("/")).equalsIgnoreCase(targetType)){
             entry += pkm.substring(0, pkm.indexOf(".")) + ", ";
           } else if(t.substring(t.indexOf("/")+1).equalsIgnoreCase(targetType)){
             entry += pkm.substring(0, pkm.indexOf(".")) + ", ";
           } 
       }
    }
    return "All "+ targetType + " type pokemon: " + entry + "\n";
  }
  
  public String statSearch(String s){ // Used for multiSearch algorithm in main
    int stat = 0;
    if(s.equalsIgnoreCase("HP")){
      stat = 0;
    }else if(s.equalsIgnoreCase("ATK")){
      stat = 1;
    }else if(s.equalsIgnoreCase("DEF")){
      stat = 2;
    }else if(s.equalsIgnoreCase("SP ATK")){
      stat = 3;
    }else if(s.equalsIgnoreCase("SP DEF")){
      stat = 4;
    }else if(s.equalsIgnoreCase("SPD")){
      stat = 5;
    }
    for(int i = 1; i < pokedex.length; i++){
      pkm = pokedex[i];
      stats = pkmStats[i];
      bst = 0;
      for(int j : stats){
        bst += j;
      }
      if(stats[stat] > bst/4.5 && stats[stat] > 100){
        entry += pkm.substring(0, pkm.indexOf(".")) + ", ";
      } 
    }
    return "All pokemon that specialize in "+ s +": "+ entry +"\n";
 }
  
  public String toString(){ // Returns the name of the pokemon, or MissingNo if not found in the pokedex
    for(int i = 0; i < pokedex.length; i++){
      if(pokedex[i].substring(0, pokedex[i].indexOf(".")).equalsIgnoreCase(pkm)){
        return pkm;
      }
    }
    return "MissingNo";
  }
  public Types getType(){ // Returns the type of this pokemon
    return type;
  } 
  public int dexNumber(){ // Returns the pokedex number of this pokemon
    return dexNum;
  }
  public int[] getStats(){
    return stats;
  }
  public int getMoveClass(String s){
    return moveset.moveClass(s);
  }
  public String[] getMoveList(){
    return moveset.getMoveList();
  }
  public String effectivity(String move, Types t2){
    if(moveset.moveClass(move) != 2){
      if(moveset.getMoveType(move).effectivity(t2) == 0){
        return "It Had No Effect";
      }else if(moveset.getMoveType(move).effectivity(t2) > 1){
        return "It's Super Effective";
      }else if(moveset.getMoveType(move).effectivity(t2) < 1){
        return "It's Not Very Effective";
      }
    }
    return "";
  }
  public String getMoves(int x){
    if(x == 0){
      return moveset.toString();
    }
    return moveset.accurateToString();
  }
  public int getDamage(String move, Pokemon a, Pokemon b){ // Returns the total damage of the move selected
    return moveset.damage(move, a, b);
  }
  public String randomMove(){
    return moveset.randomMove();
  }
}


