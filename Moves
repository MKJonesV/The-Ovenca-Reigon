public class Moves extends Pokemon{
  
  private String[][][] pkmMoves = {{{"Cut", "Body Slam", "Double Edge*"}, {"Echoed Voice", "Hyper Voice", "Boomburst"}, {"Metronome"}}, {{"Leafage", "Petal Blizzard", "Leaf Blade"}, {"Leaf Tornado", "Energy Ball", "Mega Drain**"}, {"Synthesis"}}, {{"Flame Charge", "Blaze Kick", "Flare Blitz*"}, {"Fire Spin", "Flamethrower", "Fire Blast"}, {"Will-O-Wisp"}}, {{"Aqua Jet", "Waterfall", "Liquidation"}, {"Bubble Beam", "Surf", "Hydro Pump"}, {"Aqua Ring"}}, {{"Nuzzle", "Thunder Punch", "Wild Charge*"}, {"Charge Beam", "Thunderbolt", "Thunder"}, {"Thunder Wave"}}, {{"Pounce", "Leech Life**", "Megahorn*"}, {"Infestation", "Silver Wind", "Bug Buzz"}, {"Tail Glow"}}, {{"Karate Chop", "Drain Punch**", "High Jump Kick*"}, {"Vacuum Wave", "Aura Sphere", "Focus Blast"}, {"Bulk Up"}}, {{"Heart Stamp", "Psycho Cut", "Zen Headbutt"}, {"Confusion", "Psyshock", "Psychic"}, {"Calm Mind"}}, {{"Pursuit", "Night Slash", "Foul Play"}, {"Snarl", "Dark Pulse", "Firey Wrath"}, {"Nasty Plot"}}, {{"Rock Throw", "Rock Slide", "Stone Edge"}, {"Aincent Power", "Power Gem", "Meteor Beam*"}, {"Rock Polish"}}, {{"Bulldoze", "Drill Run", "Earthquake"}, {"Mud Shot", "Scorching Sands", "Earth Power"}, {"Shore Up"}}, {{"Metal Claw", "Iron Head", "Meteor Mash"}, {"Mirror Shot", "Flash Cannon", "Steel Beam"}, {"Automize"}}, {{"Poison Tail", "Cross Poison", "Poison Jab"}, {"Acid", "Venoshock", "Sludge Wave"}, {"Toxic"}}, {{"Peck", "Aerial Ace", "Brave Bird*"}, {"Gust", "Air Slash", "Tempest Tornado"}, {"Roost"}}, {{"Astonish", "Shadow Claw", "Phantom Force"}, {"Night Shade", "Ominous Wind", "Shadow Ball"}, {"Confuse Ray"}}, {{"Ice Shard", "Ice Punch", "Icicle Crash"}, {"Powder Snow", "Ice Beam", "Blizzard"}, {"Aurora Veil"}}, {{"Draining Kiss**", "Magic Touch", "Play Rough"}, {"Disarming Voice", "Dazzling Gleam", "Moonblast"}, {"Moonlight"}}, {{"Breaking Swipe", "Dragon Claw", "Dragon Rush"}, {"Twister", "Dragon Pulse", "Draco Meteor*"}, {"Dragon Dance"}}, {{"Daze", "Shining Kick", "Light Slash"}, {"Flashbang", "Light Pulse", "Supernova*"}, {"Light Screen", "Reflect"}}, {{"Feint", "Facade", "Giga Impact***"}, {"Hidden Power", "Razor Wind", "Hyper Beam***"}, {""}}};
  private int[][][] pkmMovePower = {{{50, 85, 120}, {40, 90, 110}}, {{40, 90, 95}, {60, 90, 75}}, {{40, 80, 90}, {40, 90, 110}}, {{40, 85, 120}, {35, 90, 110}}, {{30, 75, 90}, {50, 90, 110}}, {{50, 80, 120}, {30, 60, 90}}, {{50, 75, 130}, {40, 80, 110}}, {{60, 70, 85}, {50, 80, 90}}, {{40, 70, 95}, {55, 80, 90}}, {{50, 75, 100}, {60, 80, 130}}, {{60, 80, 100}, {55, 75, 90}}, {{50, 80, 95}, {65, 85, 130}}, {{50, 70, 85}, {40, 65, 95}}, {{35, 80, 120}, {40, 75, 110}}, {{30, 70, 90}, {50, 60, 80}}, {{40, 75, 90}, {40, 90, 110}}, {{50, 70, 90}, {40, 80, 90}}, {{60, 80, 100}, {40, 85, 130}}, {{50, 65, 85}, {40, 60, 120}}, {{30, 70, 150}, {40, 80, 150}}};
  
  private String[] moveArray = new String[4];
  private int[] movePowerArray = new int[4];
  private Types[] moveTypeArray = new Types[4];
  
  private int atkClass;
  private int atkLevel;
  private Types type;
  
  public Moves(int d){
    super(d);
    type = new Types(dexNum);
    if(stats[1] > stats[3]){
      atkClass = 0;
    }else{
      atkClass = 1;
    }
    if(bst >= 500){
      atkLevel = 2;
    }else if(bst >= 375){
      atkLevel = 1;
    }else{
      atkLevel = 0;
    }
    addMoves();
  }
  
  public void addMoves(){
      moveTypeArray[0] = new Types(type.getPrimaryType());
      moveArray[0] = pkmMoves[type.getType1Val()][atkClass][atkLevel];
      movePowerArray[0] = pkmMovePower[type.getType1Val()][atkClass][atkLevel];
      // Move 1
      if(type.getSecondaryType() != ""){
        moveTypeArray[1] = new Types(type.getSecondaryType());
        moveArray[1] = pkmMoves[type.getType2Val()][atkClass][atkLevel];
        movePowerArray[1] = pkmMovePower[type.getType2Val()][atkClass][atkLevel];
      }else{
        moveTypeArray[1] = new Types("Normal");
        moveArray[1] = pkmMoves[pkmMoves.length-1][atkClass][atkLevel];
      }
      // Move 2
      if(stats[1]+stats[3] > bst/3){
        moveTypeArray[2] = new Types(type.getRandomType());
        moveArray[2] = pkmMoves[moveTypeArray[2].getType1Val()][atkClass][atkLevel/2];
        movePowerArray[2] = pkmMovePower[moveTypeArray[2].getType1Val()][atkClass][atkLevel/2];
      }else if(stats[2]+stats[4] > (bst/3)){
        if(type.getSecondaryType() != ""){
          moveTypeArray[2] = new Types(type.getSecondaryType());
          moveArray[2] = pkmMoves[type.getType2Val()][2][0];
          movePowerArray[2] = 0;
        }else{
          moveTypeArray[2] = new Types("Normal");
          moveArray[2] = "Detect";
        }
      }else{
        moveTypeArray[2] = new Types("Normal");
        moveArray[2] = "Protect";
        movePowerArray[2] = 0;
      }
      // Move 3
      moveTypeArray[3] = new Types(type.getPrimaryType());
      moveArray[3] = pkmMoves[type.getType1Val()][2][0];
      movePowerArray[3] = 0;
      // Move 4
  }
  public int damage(String m, Pokemon p1, Pokemon p2){
    int d = 0;
    int index = -1;
    for(int i = 0; i < moveArray.length; i++){
      if(moveArray[i].indexOf(m) != -1){
        d = movePowerArray[i];
        index = i;
      }
    }
    // Sets damage based on move selected
    if(atkClass == 0){
      d *= p1.getStats()[1];
      d /= p2.getStats()[2];
    }
    if(atkClass == 1){
      d *= p1.getStats()[3];
      d /= p2.getStats()[4];
    }
    // Increases damage based on attack class
    if((d != 0) && (moveTypeArray[index].getPrimaryType().equals(p1.getType().getPrimaryType()) || moveTypeArray[index].getSecondaryType().equals(p1.getType().getSecondaryType()))){
      d *= 2;
    }
    // Increases damage if move is STAB (Same Type Attack Bonus)
    d *= moveTypeArray[index].effectivity(p2.getType());
    // Calculates effectivity of move on enemy pokemon
    d *= (Math.random()*0.15)+0.85;
    // Calculates damage roll of 0.85x to 1x full power
    return d;
  }
  public String toString(){
    String moves = "";
    char atkSymbol = '-';
    for(int i = 0; i < moveArray.length; i++){
      moves += moveArray[i] + ", ";
    }
    return moves;
  }
  // Returns a basic list of moves
  
  public String accurateToString(){
    String moves = "";
    String c = "";
    for(int i = 0; i < moveArray.length; i++){
      if(movePowerArray[i] != 0 && atkClass == 0){
        c = "Physical Attack";
      }
      if(movePowerArray[i] != 0 && atkClass == 1){
        c = "Special Attack";
      }
      if(movePowerArray[i] == 0){
        c = "Status Move";
      }
      moves += moveArray[i] + " (" + moveTypeArray[i].getPrimaryType() + " Type " + c + ")" + ", ";
    }
    return moves;
  }
  // Returns a list of moves including move type and move class
  public int moveType(String s){
    for(int i = 0; i < moveArray.length; i++){
      if(moveArray[i].equals(s)){
        if(movePowerArray[i] == 0){
          return 2;
        } else {
          return atkClass;
        }
      }
    }
    return -1;
  }
}
  
